syntax = "proto3";

package meshtastic;

option csharp_namespace = "Meshtastic.Protobufs";
option go_package = "github.com/meshtastic/go/generated";
option java_outer_classname = "HeardProtos";
option java_package = "com.geeksville.mesh";
option swift_prefix = "";

// fw+ HEARD sampling reports for text broadcast coverage

message HeardReport {
  // Original broadcast identifiers
  uint32 original_source = 1;
  uint32 original_packet_id = 2;

  // Receiver info
  uint32 receiver = 3;
  uint32 hop_count = 4;

  // Link metrics at receiver
  int32 rx_rssi = 5;        // dBm
  int32 rx_snr_q4 = 6;      // SNR * 4 (Q4 fixed point)

  // Local receive time (millis since boot or local epoch)
  uint32 rx_ms = 7;
}

message HeardAggregate {
  // Original broadcast identifiers
  uint32 original_source = 1;
  uint32 original_packet_id = 2;

  // Aggregated reports (deduplicated by receiver)
  repeated HeardReport reports = 3;
}

// fw+ Assist control: local/regional throttle parameters for assisting a broadcast
message HeardAssist {
  // Reference to the original broadcast
  uint32 assist_ref_packet_id = 1;

  // Election percent per ring (1..7), values 0..100; index 0 ignored
  repeated uint32 percent_per_ring = 2;

  // Jitter parameters: tx_after = jitter_base_ms + ring * jitter_slope_ms + rand(small)
  uint32 jitter_base_ms = 3;
  uint32 jitter_slope_ms = 4;

  // Only apply throttle for rings >= scope_min_ring
  uint32 scope_min_ring = 5;
}


