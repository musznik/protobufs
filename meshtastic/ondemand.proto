syntax = "proto3";

package meshtastic;

option csharp_namespace = "Meshtastic.Protobufs";
option go_package = "github.com/meshtastic/go/generated";
option java_outer_classname = "OnDemandProtos";
option java_package = "com.geeksville.mesh";
option swift_prefix = "";

message FwPlusVersion {
    uint32 version_number = 1;
}

message NodeStats {
    optional uint32 battery_level = 1;
    optional float voltage = 2;
    optional float channel_utilization = 3;
    optional float air_util_tx = 4;
    optional uint32 uptime_seconds = 5;
    optional uint32 num_packets_tx = 6;
    optional uint32 num_packets_rx = 7;
    optional uint32 num_packets_rx_bad = 8;
    optional uint32 num_online_nodes = 9;
    optional uint32 num_total_nodes = 10;
    optional uint32 num_rx_dupe = 11;
    optional uint32 num_tx_relay = 12;
    optional uint32 num_tx_relay_canceled = 13;
    optional uint32 reboots = 14;
    optional uint32 memory_free_cheap = 15;
    optional uint32 memory_total = 16;
    optional uint32 cpu_usage_percent = 17;
    optional uint32 flash_used_bytes = 18;
    optional uint32 flash_total_bytes = 19;
    optional uint32 memory_psram_free = 20;  
    optional uint32 memory_psram_total = 21;
    optional uint32 rx_total_bytes = 22;
    optional uint32 tx_total_bytes = 23;
    optional float ch1_voltage = 24;
    optional float ch1_current = 25;
    optional float ch2_voltage = 26;
    optional float ch2_current = 27;
    optional float ch3_voltage = 28;
    optional float ch3_current = 29;
    optional uint32 flood_counter = 30;
    optional uint32 nexthop_counter = 31;
    optional string firmware_version = 32;
    optional uint32 blocked_by_hoplimit = 33;
    optional uint32 fw_plus_version = 34;
    optional uint32 rebroadcast_mode = 35;
    optional bool telemetry_limiter_enabled = 36;
    optional bool position_limiter_enabled = 37;
    optional uint32 opportunistic_mode = 38;
    optional bool opportunistic_enabled = 39;
}

message RxPacketHistory {
    repeated uint32 rx_packet_history = 1;
}

message RxAvgTimeHistory {
    repeated uint32 rx_avg_history = 1;
}

message PortCounterEntry {
    uint32 port = 1;
    uint32 count = 2;
}

message PortCountersHistory {
    repeated PortCounterEntry port_counter_history = 1;
}

message RoutingErrorEntry {
    uint32 num = 1;
    uint32 counter = 2;
}

message RoutingErrorsHistory {
    repeated RoutingErrorEntry routing_errors = 1;
}

message AirActivityEntry {
    uint32 tx_time = 1;
    uint32 rx_time = 2;
    uint32 rxBad_time = 3;   
}

message AirActivityHistory {
    repeated AirActivityEntry air_activity_history = 1;
}

message NodeEntry {
    uint32 node_id = 1;
    string long_name = 2;
    string short_name = 3;
    fixed32 last_heard = 4;
    float snr = 5;
    uint32 hops = 6;
    int32 rx_rssi = 7;
    optional sfixed32 latitude_i = 8;
    optional sfixed32 longitude_i = 9;
}

message ExchangeEntry {
    uint32 from_node = 1;
    uint32 to_node = 2;
    uint32 port_num = 3;
}

message ExchangeList {
    repeated ExchangeEntry exchange_list = 1;
}

message NodesList {
    repeated NodeEntry node_list = 1;
}

message Ping { 
    optional int32 rx_rssi = 1;
    optional float snr = 2;
}

enum OnDemandType {
    UNKNOWN_TYPE = 0;
    REQUEST_PACKET_RX_HISTORY = 1;
    RESPONSE_PACKET_RX_HISTORY = 2;
    REQUEST_NODES_ONLINE = 3;
    RESPONSE_NODES_ONLINE = 4;
    REQUEST_PING = 5;
    RESPONSE_PING = 6;
    REQUEST_RX_AVG_TIME = 7;
    RESPONSE_RX_AVG_TIME = 8;
    REQUEST_PORT_COUNTER_HISTORY = 9;
    RESPONSE_PORT_COUNTER_HISTORY = 10;
    REQUEST_PACKET_EXCHANGE_HISTORY=11;
    RESPONSE_PACKET_EXCHANGE_HISTORY=12;
    REQUEST_AIR_ACTIVITY_HISTORY=13;
    RESPONSE_AIR_ACTIVITY_HISTORY=14;
    REQUEST_NODE_STATS=15;
    RESPONSE_NODE_STATS=16;
    REQUEST_FW_PLUS_VERSION=17;
    RESPONSE_FW_PLUS_VERSION=18;
    REQUEST_ROUTING_ERRORS=19;
    RESPONSE_ROUTING_ERRORS=20;
    REQUEST_PING_ACK = 21;
    RESPONSE_PING_ACK = 22;
    REQUEST_NODES_DIRECT_ONLINE = 23;
    REQUEST_ROUTING_TABLE = 24;
    RESPONSE_ROUTING_TABLE = 25;
    //fw+ DTN overlay stats
    REQUEST_DTN_OVERLAY_STATS = 26;
    RESPONSE_DTN_OVERLAY_STATS = 27;
    // fw+ Broadcast Assist stats
    REQUEST_BROADCAST_ASSIST_STATS = 28;
    RESPONSE_BROADCAST_ASSIST_STATS = 29;
}

message OnDemandRequest {
    OnDemandType request_type = 1;
}

message OnDemandResponse {
    OnDemandType response_type = 1;
    oneof response_data {
        RxPacketHistory rx_packet_history = 2;
        NodesList node_list = 3;
        Ping ping = 4;
        RxAvgTimeHistory rx_avg_time_history = 5;
        PortCountersHistory port_counter_history = 6;
        ExchangeList exchange_packet_log = 7;
        AirActivityHistory air_activity_history=8;
        NodeStats node_stats=9;
        FwPlusVersion fw_plus_version=10;
        RoutingErrorsHistory routing_errors=11;
        RoutingTable routing_table=12;
        //fw+ DTN overlay stats response
        DtnOverlayStats dtn_overlay_stats=13;
        // fw+ Broadcast Assist stats response
        BroadcastAssistStats broadcast_assist_stats=14;
    }
}

message OnDemand {
    optional uint32 packet_index = 1;
    optional uint32 packet_total = 2;
    oneof variant {
        OnDemandRequest request = 3;
        OnDemandResponse response = 4;
    }
}

// Routing table structures for UI
message RoutingTableEntry {
    uint32 dest = 1;
    uint32 next_hop = 2;          // last-byte id of next hop
    float cost = 3;               // aggregated ETX-like cost
    uint32 confidence = 4;        // how sure we are
    uint32 age_secs = 5;          // age of entry in seconds
}

message RoutingTable {
    repeated RoutingTableEntry routes = 1;
}

//fw+ DTN overlay statistics structure for UI/diagnostics
message DtnOverlayStats {
    // Current queue size of pending entries
    optional uint32 pending_count = 1;
    // Total overlay forwards attempted
    optional uint32 forwards_attempted = 2;
    // Total native DM fallbacks attempted
    optional uint32 fallbacks_attempted = 3;
    // Receipts emitted by this node (DELIVERED/PROGRESSED/EXPIRED)
    optional uint32 receipts_emitted = 4;
    // Receipts received by this node for its originated messages
    optional uint32 receipts_received = 5;
    // Entries expired by deadline
    optional uint32 expired = 6;
    // Entries abandoned due to max tries
    optional uint32 give_ups = 7;
    // Milestone progress notifications sent
    optional uint32 milestones_sent = 8;
    // FW+ probe packets sent near deadlines
    optional uint32 probes_sent = 9;
    // Whether DTN overlay is enabled via config
    optional bool enabled = 10;
    // Seconds since last forward attempt (0 if none)
    optional uint32 last_forward_age_secs = 11;
}

// fw+ Broadcast Assist statistics for UI/diagnostics
message BroadcastAssistStats {
    // Whether Broadcast Assist module is currently enabled
    optional bool enabled = 1;
    // Number of reflood decisions considered (attempted to schedule/send) in this session
    optional uint32 reflood_attempts = 2;
    // Number of reflood packets actually sent to the mesh
    optional uint32 reflood_sent = 3;
    // Refloods suppressed due to duplicate suppression threshold within window_ms
    optional uint32 suppressed_dup = 4;
    // Refloods suppressed due to neighbor degree gating (hard threshold or probabilistic)
    optional uint32 suppressed_degree = 5;
    // Refloods suppressed by airtime/channel-utilization guard
    optional uint32 suppressed_airtime = 6;
    // Age in seconds since the last reflood was sent (0 if none yet)
    optional uint32 last_reflood_age_secs = 7;
}